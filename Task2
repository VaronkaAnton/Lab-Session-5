#include <iostream>
using namespace std;

int bigFunction(char s[])
{
	char min[4] = "min";
	int a[100] = { 0 };
	char func[100] = { 0 };
	int k = 0; int j = 0; int u = 0; bool check;
	for (int i = 0; i < strlen(s); i++)
	{
		while ((s[i] != '(') && (s[i] != ')') && (s[i] != ',') && (s[i] != '\0'))
		{
			if (isdigit(s[i]))
			{
				while ((s[i] != '(') && (s[i] != ')') && (s[i] != ',') && (s[i] != '\0'))
				{
					a[k] = ((a[k] * 10) + (s[i] - '0'));
					i++;
				}
				k++;
				if (s[i] != ')')
				{
					i++;
				}
			}
			else
			{
				u = 0;
				for (int q = i; i < (q + 3); i++)
				{
					if (min[u] == s[i])
					{
						check = true;
					}
					else
					{
						check = false;
					}
					u++;
				}
				if (check == true)
				{
					func[j] = 'i';
					j++;
				}
				else
				{
					func[j] = 'a';
					j++;
				}
			}
			if (s[i] == ')')
			{
				if (func[j - 1] == 'a')
				{
					if (a[k - 1] >= a[k - 2])
					{
						a[k - 2] = a[k - 1];
						k--;
					}
					else
					{
						a[k - 2] = a[k - 2];
						k--;
					}
					j--;
				}
				if (func[j - 1] == 'i')
				{
					if (a[k - 1] >= a[k - 2])
					{
						a[k - 2] = a[k - 2];
						k--;
					}
					else
					{
						a[k - 2] = a[k - 1];
						k--;
					}
					j--;
				}
			}
		}
	}
	return a[0];
}
void assert(char str[], int result)
{
	int ans = bigFunction(str);
	if (ans == result)
		cout << "OK" << endl;
	else cout << "FAIL:" << ans << " != " << result << endl;
}
int main()
{
	assert("0", 0);
	assert("max(8,9)", 9);
	assert("min(7,3)", 3);
	assert("max(9,min(7,0))", 9);
	assert("min(min(8,9),max(8,0))", 8);
	assert("max(max(8,min(3,4)),min(max(1,2),7))", 8);
	assert("min(1,min(max(1,2),7))", 1);
	assert("max(19,min(7,10))", 19);
}
