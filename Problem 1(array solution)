	#include <iostream>
	using namespace std;
	char brackets[100]; char stack[100]; int start = 0;

	int bracketsDrafting(char brackets[])
	{
		for (int i = 0; i < strlen(brackets); i++)
		{
			if ((brackets[i] == '(') || (brackets[i] == '{') || (brackets[i] == '['))
			{
				stack[start] = brackets[i];
				start++;
			}
			if (((brackets[i] == ')') && (stack[start - 1] == '(')) || ((brackets[i] == '}') && (stack[start - 1] == '{')) || ((brackets[i] == ']') && (stack[start - 1] == '[')))
				start--;
		}
		return start; //start = 0 => win, start <> 0 => fail
	}
void assert(char str[], bool result)
{
	bool answer;
	int ans = bracketsDrafting(str);
	if (ans == 0)
		answer = true;
	else
		answer = false;
	if (answer == result)
		cout << "OK" << endl;
	else
		cout << "FAIL" << endl;
}
int main()
{
	assert ("()", true);
	assert ("([[]{()}]({}))", true);
	assert ("(([]{()}))", true);
	assert ("([{}])", true);
	assert ("(()", false);
	assert ("[({)}]", false);
	assert("((((((((((((((((((())))))))))", false);
	assert("()", true);
}
